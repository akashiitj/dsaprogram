//https://leetcode.com/problems/task-scheduler/submissions/


class Solution {
public:
    int leastInterval(vector<char>& tasks, int n) {
        vector<int> freq(26,0);
        priority_queue<int> pq;
        unordered_map<int,int> cooling;
        for(auto task:tasks){
            freq[task-'A']++;
        }
        for(auto f:freq){
            if(f!=0)
                pq.push(f);
        }
        int curTime=0,curTask;
        while(!(pq.empty()&&cooling.empty())){
            curTime++;
            if(cooling.find(curTime-n-1)!=cooling.end()){
                pq.push(cooling[curTime-n-1]);
                cooling.erase(curTime-n-1);
            }
            if(!pq.empty()){
                curTask = pq.top();
                pq.pop();
                curTask--;
                if(curTask>0){
                    cooling[curTime]=curTask;
                }
            }
        }
        return curTime;
    }
};
